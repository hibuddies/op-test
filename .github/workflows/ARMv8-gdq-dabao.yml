name: ARMv8-gdq-dabao

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      days:
        description: 'Number of days.'
        required: true
        default: 60
      minimum_runs:
        description: 'The minimum runs to keep for each workflow.'
        required: true
        default: 6
  schedule:
    - cron: 0 22 * * *
      
env:
  UPLOAD_COWTRANSFER: false
  RELEASE: true
  TZ: Asia/Shanghai
  FILE_NAME: ARMv8-gdq-已打包固件

jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build for ${{ matrix.flippy_name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - flippy_name: 50
       #     armbian_beikeyun_s: Armbian_20.10_Beikeyun_buster_5.9.8-flippy-49+.img.xz
            armbian_beikeyun_o: Armbian_20.10_Beikeyun_buster_5.4.83-flippy-50+o.img.xz
            armbian_s9xxx_s: Armbian_20.10_Aml-s9xxx_buster_5.9.14-flippy-50+.img.xz
            armbian_s9xxx_o: Armbian_20.10_Aml-s9xxx_buster_5.4.83-flippy-50+o.img.xz
       #     openwrt_beikeyun_+: Beikeyun_Openwrt_R20.12.12_k5.9.8-flippy-49+.img
            openwrt_beikeyun_o: Beikeyun_Openwrt_R20.12.12_k5.4.83-flippy-50+o.img
            openwrt_s905x3_s: S905x3_Openwrt_R20.12.12_k5.9.14-flippy-50+.img
            openwrt_s905x3_o: S905x3_Openwrt_R20.12.12_k5.4.83-flippy-50+o.img
            openwrt_n1_s: N1_Openwrt_R20.12.12_k5.9.14-flippy-50+.img
            openwrt_n1_o: N1_Openwrt_R20.12.12_k5.4.83-flippy-50+o.img
    env:
      FLIPPY_NAME: ${{ matrix.flippy_name }}
     # ARMBIAN_BEIKEYUN_S: ${{ matrix.armbian_beikeyun_s }}   
      ARMBIAN_BEIKEYUN_O: ${{ matrix.armbian_beikeyun_o }}
      ARMBIAN_S9XXX_S: ${{ matrix.armbian_s9xxx_s }}
      ARMBIAN_S9XXX_O: ${{ matrix.armbian_s9xxx_o }}
     # OPENWRT_BEIKEYUN_S: ${{ matrix.openwrt_beikeyun_+ }}
      OPENWRT_BEIKEYUN_O: ${{ matrix.openwrt_beikeyun_o }}
      OPENWRT_S905x3_S: ${{ matrix.openwrt_s905x3_s }}
      OPENWRT_S905x3_O: ${{ matrix.openwrt_s905x3_o }}
      OPENWRT_N1_S: ${{ matrix.openwrt_n1_s }}
      OPENWRT_N1_O: ${{ matrix.openwrt_n1_o }}
    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: Initialization environment
      run: |     
        if [[ $FLIPPY_NAME = "50" ]]; 
        then
          echo "set the flippy 50"
         # echo "a_beikeyun_sfe=${{ secrets.a_beikeyun_sfe }}"  >> $GITHUB_ENV
          echo "a_beikeyun_o=${{ secrets.a_beikeyun_o }}"  >> $GITHUB_ENV
          echo "a_s9xx_sfe=${{ secrets.a_s9xxx_sfe }}"  >> $GITHUB_ENV
          echo "a_s9xxx_o=${{ secrets.a_s9xxx_o }}"  >> $GITHUB_ENV
          echo "dibao_sfe=${{ secrets.dibao_gdq_sfe }}"  >> $GITHUB_ENV
          echo "dibao_o=${{ secrets.dibao_gdq_o }}"  >> $GITHUB_ENV
        fi
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install time
        sudo timedatectl set-timezone "$TZ"
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")"  >> $GITHUB_ENV
        sudo chmod  -R 777 /opt
        cp -r ${FLIPPY_NAME}/opt/* /opt
        test -d /opt/dl || mkdir -p /opt/dl
        sudo chmod  -R 777 /opt/dl
        cd /opt
        mkdir imgs
        
    - uses: actions/cache@v2
      id: opwenwrtcache
      with:
        path: |
          /opt/dl
        key: ${{ runner.os }}-opwenwrt-${{ env.FLIPPY_NAME }}
      
    - name: Download and Copy files
      #if: steps.opwenwrtcache.outputs.cache-hit != 'true'
      run: |
        cd /opt/dl
        sudo rm -rf Armbian_*
        sudo rm -rf openwrt-armvirt-64-*
        wget $dibao_sfe
        cp /opt/dl/openwrt-armvirt-64-default-rootfs.tar.gz /opt/openwrt/sfe-openwrt-armvirt-64-default-rootfs.tar.gz
        sudo rm -rf /opt/dl/openwrt-armvirt-64-default-rootfs.tar.gz
        wget $dibao_o
        cp /opt/dl/openwrt-armvirt-64-default-rootfs.tar.gz /opt/openwrt/openwrt-armvirt-64-default-rootfs.tar.gz
        wget $a_beikeyun_o
        wget $a_s9xx_sfe
        wget $a_s9xxx_o
        #  cp /opt/dl/$ARMBIAN_BEIKEYUN_S /opt/imgs/$ARMBIAN_BEIKEYUN_S
        cp /opt/dl/$ARMBIAN_BEIKEYUN_O /opt/imgs/$ARMBIAN_BEIKEYUN_O
        cp /opt/dl/$ARMBIAN_S9XXX_S /opt/imgs/$ARMBIAN_S9XXX_S
        cp /opt/dl/$ARMBIAN_S9XXX_O /opt/imgs/$ARMBIAN_S9XXX_O

        
    - name: Check Files1
      run: |
        cd /opt/dl
        ls
        
    - name: Check Files2
      run: |
        cd /opt/openwrt/
        ls

    - name: Check Files3
      run: |
        cd /opt/imgs/
        ls
      
    - name: Install the package
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install xz-utils btrfs-progs gawk zip unzip curl dosfstools  uuid-runtime
        sudo -E apt-get -qq install git  git-core
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
              
    - name: build img
      run: |
        #  sudo rm -rf /opt/openwrt/tmp/${OPENWRT_BEIKEYUN_S}.xz   
        sudo rm -rf /opt/openwrt/tmp/${OPENWRT_S905x3_S}.xz
        sudo rm -rf /opt/openwrt/tmp/${OPENWRT_N1_S}.xz
        sudo rm -rf /opt/openwrt/tmp/${OPENWRT_BEIKEYUN_O}.xz   
        sudo rm -rf /opt/openwrt/tmp/${OPENWRT_S905x3_O}.xz
        sudo rm -rf /opt/openwrt/tmp/${OPENWRT_N1_O}.xz
        cd /opt/imgs        
        #  sudo xz -d $ARMBIAN_BEIKEYUN_S
        sudo xz -d $ARMBIAN_S9XXX_S
        sudo xz -d $ARMBIAN_BEIKEYUN_O
        sudo xz -d $ARMBIAN_S9XXX_O
        sudo chmod  -R 777 /opt
        cd /opt/openwrt
        chmod +x *.sh
        #  sudo bash mk_beikeyun_opimg_sfe.sh
        sudo bash mk_s905x3_opimg_sfe.sh
        sudo bash mk_n1_opimg_sfe.sh
        sudo bash mk_beikeyun_opimg.sh
        sudo bash mk_s905x3_opimg.sh
        sudo bash mk_n1_opimg.sh

    - name: xz-z
      id: xz
      run: |
        sudo chmod  -R 777 /opt/openwrt/tmp
        cd /opt/openwrt/tmp 
        #  sudo xz -z $OPENWRT_BEIKEYUN_S
        sudo xz -z $OPENWRT_S905x3_S
        sudo xz -z $OPENWRT_N1_S
        sudo xz -z $OPENWRT_BEIKEYUN_O
        sudo xz -z $OPENWRT_S905x3_O
        sudo xz -z $OPENWRT_N1_O
        echo "::set-output name=status::success"

   # - name: Check space usage
    #  if: (!cancelled())
     # run: df -hT

    - name: Create release
      if: steps.xz.outputs.status == 'success'  &&  env.RELEASE == 'true' && !cancelled()
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.DATE }} / Openwrt-50+和50+o高大全版
        allowUpdates: true
        tag: ${{ env.FILE_NAME }}
        commit: main
        token: ${{ secrets.RELEASES_TOKEN   }}
        body: |
          默认IP：192.168.1.1 默认密码： password
          Openwrt🚀(注:+o版为flowoffload加速,+版为sfe加速)
        artifacts: "/opt/openwrt/tmp/*.xz"
        
    - name: Upload firmware to WeTransfer
      if: steps.xz.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress /opt/openwrt/tmp/$OPENWRT_BEIKEYUN_S.xz 2>&1 | tee cowtransfer.log
        ./transfer cow --block 2621440 -s -p 64 --no-progress /opt/openwrt/tmp/$OPENWRT_S905x3_S.xz 2>&1 | tee cowtransfer.log
        ./transfer cow --block 2621440 -s -p 64 --no-progress /opt/openwrt/tmp/$OPENWRT_N1_S.xz 2>&1 | tee cowtransfer.log
        ./transfer cow --block 2621440 -s -p 64 --no-progress /opt/openwrt/tmp/$OPENWRT_BEIKEYUN_O.xz 2>&1 | tee cowtransfer.log
        ./transfer cow --block 2621440 -s -p 64 --no-progress /opt/openwrt/tmp/$OPENWRT_S905x3_O.xz 2>&1 | tee cowtransfer.log
        ./transfer cow --block 2621440 -s -p 64 --no-progress /opt/openwrt/tmp/$OPENWRT_N1_O.xz 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      with:
        keep_latest: 8
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}  

